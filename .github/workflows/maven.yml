# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: project Ci cd flow 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: rousgidraph/spring-github-bebop
        tags: v1, latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6



  test:
    runs-on: ubuntu-latest
    name: A test job to cowsay
    steps:
      - name: output the message on actions result
        uses: Code-Hex/neo-cowsay-action@v1
        with:
          message: | # Support multi-lines
            This is cowsay
            Hello, World!!
      - name: cowsay on the comment
        uses: Code-Hex/neo-cowsay-action@v1
        with:
          message: 'Hello, World with random'
          cow: 'random' # If specified, it shows random ascii art.
          cowsay_on_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: output pipeline
        id: cowsay_output_id # You want id
        uses: Code-Hex/neo-cowsay-action@v1
        with:
          message: 'Hello, World'
          cow: 'gopher' # ascii art list: https://github.com/Code-Hex/Neo-cowsay/tree/master/cows
          cowsay_to_output: 'cowsay'
      - name: print output
        run: |
          echo "${{ steps.cowsay_output_id.outputs.cowsay }}"